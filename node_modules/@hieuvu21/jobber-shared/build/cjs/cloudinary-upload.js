"use strict";

exports.__esModule = true;
exports.uploads = uploads;
exports.videoUploads = videoUploads;
const cloudinary = require('cloudinary').v2;
function videoUploads(file, public_id, overwrite, invalidate) {
  return new Promise(resolve => {
    cloudinary.v2.uploader.upload(file, {
      public_id,
      overwrite,
      invalidate,
      chunk_size: 50000,
      resource_type: 'video'
    }, (error, result) => {
      if (error) return resolve(error);
      if (result) return resolve(result);
    });
  });
}
function uploads(file, public_id, overwrite, invalidate) {
  return new Promise(resolve => {
    cloudinary.v2.uploader.upload(file, {
      public_id,
      overwrite,
      invalidate,
      resource_type: 'auto'
    }, (error, result) => {
      if (error) return resolve(error);
      if (result) return resolve(result);
    });
  });
}
//# sourceMappingURL=cloudinary-upload.js.map