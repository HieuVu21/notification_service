"use strict";

exports.__esModule = true;
exports.customError = exports.ServerError = exports.NotFoundError = exports.NotAuthorizeError = exports.FileTooLargeError = exports.BadRequestError = void 0;
var _httpStatus = require("http-status");
class customError extends Error {
  constructor(message, comingFrom) {
    super(message);
    this.statusCode = void 0;
    this.status = void 0;
    this.comingFrom = void 0;
    this.comingFrom = comingFrom;
  }
  serializeError() {
    return {
      message: this.message,
      statusCode: this.statusCode,
      status: this.status,
      comingFrom: this.comingFrom
    };
  }
}
exports.customError = customError;
class BadRequestError extends customError {
  constructor(message, comingFrom) {
    super(message, comingFrom);
    this.statusCode = _httpStatus.status.BAD_REQUEST;
    this.status = 'error';
  }
}
exports.BadRequestError = BadRequestError;
class NotFoundError extends customError {
  constructor(message, comingFrom) {
    super(message, comingFrom);
    this.statusCode = _httpStatus.status.NOT_FOUND;
    this.status = 'error';
  }
}
exports.NotFoundError = NotFoundError;
class NotAuthorizeError extends customError {
  constructor(message, comingFrom) {
    super(message, comingFrom);
    this.statusCode = _httpStatus.status.UNAUTHORIZED;
    this.status = 'error';
  }
}
exports.NotAuthorizeError = NotAuthorizeError;
class FileTooLargeError extends customError {
  constructor(message, comingFrom) {
    super(message, comingFrom);
    this.statusCode = 413;
    this.status = 'error';
  }
}
exports.FileTooLargeError = FileTooLargeError;
class ServerError extends customError {
  constructor(message, comingFrom) {
    super(message, comingFrom);
    this.statusCode = _httpStatus.status.SERVICE_UNAVAILABLE;
    this.status = 'error';
  }
}
exports.ServerError = ServerError;
//# sourceMappingURL=error-handler.js.map