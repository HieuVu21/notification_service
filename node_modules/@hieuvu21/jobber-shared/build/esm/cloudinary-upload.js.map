{"version":3,"file":"cloudinary-upload.js","names":["cloudinary","require","v2","videoUploads","file","public_id","overwrite","invalidate","Promise","resolve","uploader","upload","chunk_size","resource_type","error","result","uploads"],"sources":["../../src/cloudinary-upload.ts"],"sourcesContent":["import { UploadApiErrorResponse, UploadApiResponse } from \"cloudinary\";\r\nimport { promises } from \"dns\";\r\n\r\nconst cloudinary = require('cloudinary').v2\r\n\r\n\r\nexport function videoUploads(\r\n    file: string, \r\n    public_id?: string,\r\n    overwrite?: boolean,\r\n    invalidate?: boolean\r\n): Promise<UploadApiResponse | UploadApiErrorResponse | undefined> {\r\n    return new Promise((resolve) => {\r\n        cloudinary.v2.uploader.upload(\r\n            file,\r\n            {\r\n                public_id,\r\n                overwrite,\r\n                invalidate,\r\n                chunk_size: 50000,  \r\n                resource_type: 'video',\r\n            },\r\n            (error: UploadApiErrorResponse | undefined, result: UploadApiResponse | undefined) => {\r\n                if (error) return resolve(error)\r\n                if (result) return resolve(result)\r\n            }\r\n        )\r\n    })\r\n}\r\nexport function uploads(\r\n    file: string, \r\n    public_id?: string,\r\n    overwrite?: boolean,\r\n    invalidate?: boolean\r\n): Promise<UploadApiResponse | UploadApiErrorResponse | undefined> {\r\n    return new Promise((resolve) => {\r\n        cloudinary.v2.uploader.upload(\r\n            file,\r\n            {\r\n                public_id,\r\n                overwrite,\r\n                invalidate,\r\n                resource_type: 'auto',\r\n            },\r\n            (error: UploadApiErrorResponse | undefined, result: UploadApiResponse | undefined) => {\r\n                if (error) return resolve(error)\r\n                if (result) return resolve(result)\r\n            }\r\n        )\r\n    })\r\n}\r\n"],"mappings":"AAGA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,EAAE;AAG3C,OAAO,SAASC,YAAYA,CACxBC,IAAY,EACZC,SAAkB,EAClBC,SAAmB,EACnBC,UAAoB,EAC2C;EAC/D,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BT,UAAU,CAACE,EAAE,CAACQ,QAAQ,CAACC,MAAM,CACzBP,IAAI,EACJ;MACIC,SAAS;MACTC,SAAS;MACTC,UAAU;MACVK,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE;IACnB,CAAC,EACD,CAACC,KAAyC,EAAEC,MAAqC,KAAK;MAClF,IAAID,KAAK,EAAE,OAAOL,OAAO,CAACK,KAAK,CAAC;MAChC,IAAIC,MAAM,EAAE,OAAON,OAAO,CAACM,MAAM,CAAC;IACtC,CACJ,CAAC;EACL,CAAC,CAAC;AACN;AACA,OAAO,SAASC,OAAOA,CACnBZ,IAAY,EACZC,SAAkB,EAClBC,SAAmB,EACnBC,UAAoB,EAC2C;EAC/D,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BT,UAAU,CAACE,EAAE,CAACQ,QAAQ,CAACC,MAAM,CACzBP,IAAI,EACJ;MACIC,SAAS;MACTC,SAAS;MACTC,UAAU;MACVM,aAAa,EAAE;IACnB,CAAC,EACD,CAACC,KAAyC,EAAEC,MAAqC,KAAK;MAClF,IAAID,KAAK,EAAE,OAAOL,OAAO,CAACK,KAAK,CAAC;MAChC,IAAIC,MAAM,EAAE,OAAON,OAAO,CAACM,MAAM,CAAC;IACtC,CACJ,CAAC;EACL,CAAC,CAAC;AACN","ignoreList":[]}