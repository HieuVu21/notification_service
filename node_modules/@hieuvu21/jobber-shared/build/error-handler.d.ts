export interface IErrorResponse {
    message: string;
    statusCode: number;
    status: string;
    comingFrom: string;
    serializeError(): IError;
}
export interface IError {
    message: string;
    statusCode: number;
    status: string;
    comingFrom: string;
}
export declare abstract class customError extends Error {
    abstract statusCode: number;
    abstract status: string;
    comingFrom: string;
    constructor(message: string, comingFrom: string);
    serializeError(): IError;
}
export declare class BadRequestError extends customError {
    statusCode: 400;
    status: string;
    constructor(message: string, comingFrom: string);
}
export declare class NotFoundError extends customError {
    statusCode: 404;
    status: string;
    constructor(message: string, comingFrom: string);
}
export declare class NotAuthorizeError extends customError {
    statusCode: 401;
    status: string;
    constructor(message: string, comingFrom: string);
}
export declare class FileTooLargeError extends customError {
    statusCode: number;
    status: string;
    constructor(message: string, comingFrom: string);
}
export declare class ServerError extends customError {
    statusCode: 503;
    status: string;
    constructor(message: string, comingFrom: string);
}
